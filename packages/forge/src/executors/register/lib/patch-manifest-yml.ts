import { writeFileSync } from 'fs';
import { dump } from 'js-yaml';
import { joinPathFragments, logger } from '@nx/devkit';
import { NormalizedOptions } from '../schema';
import { loadManifestYml } from '../../../utils/forge/load-manifest-yml';

/**
 * Copies the Forge app id generated by `forge register` from the manifest.yml in the output path to
 * the project manifest.yml in the project root directory.
 *
 * @param options Executor options
 */
export async function patchManifestYml(options: NormalizedOptions) {
  const outputManifestPath = joinPathFragments(
    options.outputPath,
    'manifest.yml'
  );
  const outputManifestSchema = await loadManifestYml(outputManifestPath);

  const appId: string = outputManifestSchema.app.id;

  const projectManifestPath = joinPathFragments(
    options.projectRoot,
    'manifest.yml'
  );
  const projectManifestSchema = await loadManifestYml(projectManifestPath);

  logger.info(
    `Patching project manifest ${projectManifestPath} with app id ${appId}...`
  );
  const patchedProjectManifest = {
    ...projectManifestSchema,
    app: {
      ...projectManifestSchema.app,
      id: appId,
    },
  };

  const patchedProjectManifestContent = dump(patchedProjectManifest, {});
  writeFileSync(projectManifestPath, patchedProjectManifestContent, {
    encoding: 'utf8',
  });

  logger.info(`Done patching ${projectManifestPath}.`);
}
